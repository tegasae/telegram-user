<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Форма с полями</title>

    <!-- Конфигурация для разработчика -->
    <script type="application/json" id="devConfig">
    {
        "serverEnabled": true,
        "apiUrl": "http://127.0.0.1/",
        "debugMode": true
    }
    </script>

    <style>
        .container {
            display: flex;
            gap: 20px;
        }
        .left-section, .middle-section, .right-section {
            display: flex;
            flex-direction: column;
        }
        textarea {
            width: 300px;
            height: 150px;
            margin-bottom: 10px;
        }
        .small-textarea {
            height: 80px;
        }
        button {
            width: 100px;
            padding: 5px;
            margin-bottom: 15px;
        }
        .radio-list, .checkbox-list {
            display: flex;
            flex-direction: column;
            gap: 5px;
            margin-bottom: 10px;
        }
        /* Стили для скрытых списков */
        .people-container {
            display: flex;
            flex-direction: column;
        }
        .checkbox-list {
            display: none; /* По умолчанию скрываем */
            margin-top: 10px;
        }
        .toggle-people-btn {
            width: 150px; /* Шире обычной кнопки */
        }
        /* Новые стили для списка отправителей */
        .senders-container {
            margin-top: 20px;
        }
        select {
            width: 150px;
            padding: 5px;
            margin-bottom: 10px;
        }
        /* Стиль для отладки */
        .debug-info {
            position: fixed;
            bottom: 10px;
            right: 10px;
            background: rgba(0,0,0,0.7);
            color: white;
            padding: 5px 10px;
            border-radius: 4px;
            font-family: monospace;
            font-size: 12px;
        }
    </style>
</head>
<body>
    {{current_events}}
    {% if current_events|length!=0 %}
        {%for e in current_events%}
        <div class="alert alert-danger">
            {%if e==1%}Сообщение отправлено{%endif%}
            {%if e==2%}Сообщение не может быть пустым{%endif%}
            {%if e==3%}Должен быть выбран хотя бы один получатель{%endif%}
        </div>
        {%endfor%}
    {% endif %}
    <form method="POST">
        <div class="container">
            <!-- Левая секция - основное textarea и кнопка -->
            <div class="left-section">
                <textarea id="mainTextarea" name="{{form.value_field.message}}" placeholder="Введите ваш текст здесь...">{{form.message.message}}</textarea>
                <button type="submit">Отправить</button>
            </div>

            <!-- Средняя секция - radiobuttons и textarea для нового сообщения -->
            <div class="middle-section">
                <div class="radio-list" id="radioList">
                    {% for m in form.messages%}
                        <label><input type="radio" name="{{form.value_field.messages}}" value="{{m.id}}" id="{{m.id}}" onchange="insertMessage('{{m.message}}')">{{m.message}}</label>
                    {% endfor%}
                </div>

                <textarea class="small-textarea" id="newMessage" placeholder="Введите новое сообщение..."></textarea>
                <button type="button" onclick="saveNewMessage()">Сохранить</button>
            </div>

            <!-- Правая секция - checkbox с именами людей -->
            <div class="right-section">
                <div class="people-container">
                    <button type="button" class="toggle-people-btn" onclick="togglePeopleList()">Показать получателей</button>
                    <div class="checkbox-list" id="peopleList">
                      {% for r in form.receivers %}
                        <label><input type="checkbox" name="{{form.value_field.receivers}}" value="{{r.id}}" id="{{r.id}}" checked>{{r.name}}</label>
                      {% endfor %}
                    </div>
                </div>

                <!-- Новый блок для выбора отправителя -->
                <div class="senders-container">
                 {{var.set_sender}}
                    <label for="senderSelect">Отправитель:</label>
                    <select id="senderSelect" name="{{form.value_field.senders}}">
                        {% for s in form.senders %}
                            <option value="{{s.id}}" {%if s.id==var.set_sender%}selected{%endif%}>{{s.name}}</option>
                        {% endfor %}
                    </select>
                </div>
            </div>
        </div>
    </form>

    <!-- Блок отладочной информации -->
    <div id="debugInfo" class="debug-info" style="display: none;"></div>

    <script>
        // Получаем конфиг из HTML
        const config = JSON.parse(document.getElementById('devConfig').textContent);

        // Показываем отладочную информацию если включен debugMode
        if (config.debugMode) {
            document.getElementById('debugInfo').style.display = 'block';
            document.getElementById('debugInfo').textContent =
                `Режим: ${config.serverEnabled ? 'СЕРВЕРНЫЙ' : 'ЛОКАЛЬНЫЙ'}`;

            console.log('Конфигурация:', config);
            if (!config.serverEnabled) {
                console.warn('Серверный режим ОТКЛЮЧЕН в конфиге!');
            }
        }

        function insertMessage(message) {
            document.getElementById('mainTextarea').value = message;
        }

        function addMessageToRadioList(id, message) {
            const radioList = document.getElementById('radioList');
            const newId = 'msg' + id;

            const newRadio = document.createElement('label');
            newRadio.innerHTML = `
                <input type="radio" name="shortMessage" value="${id}" id="${newId}"
                       onchange="insertMessage('${message.replace(/'/g, "\\'")}')">
                ${message}
            `;

            radioList.appendChild(newRadio);
        }

        async function saveNewMessage() {
            const newMessage = document.getElementById('newMessage').value.trim();
            if (newMessage === '') {
                alert('Введите новое сообщение!');
                return;
            }

            // Локальное добавление сообщения
            const localId = Date.now();
            addMessageToRadioList(localId, newMessage);

            // Отправка на сервер только если включено в конфиге
            if (config.serverEnabled) {
                try {
                    const response = await fetch(config.apiUrl, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ message: newMessage })
                    });

                    if (!response.ok) {
                        throw new Error(`HTTP error ${response.status}`);
                    }

                    const data = await response.json();
                    console.log('Сообщение сохранено на сервере с ID:', data.id);
                    alert(`Сообщение сохранено на сервере с ID: ${data.id}`);

                } catch (error) {
                    console.error('Ошибка отправки:', error);
                    alert('Ошибка при сохранении на сервере (сообщение сохранено локально)');
                }
            } else {
                console.log('Локальное сохранение (серверный режим отключен)');
                alert('Сообщение сохранено локально (серверный режим отключен)');
            }

            document.getElementById('newMessage').value = '';
        }

        // Функция для показа/скрытия списка людей
        function togglePeopleList() {
            const peopleList = document.getElementById('peopleList');
            const toggleBtn = document.querySelector('.toggle-people-btn');

            if (peopleList.style.display === 'none' || !peopleList.style.display) {
                peopleList.style.display = 'flex';
                toggleBtn.textContent = 'Скрыть получателей';
            } else {
                peopleList.style.display = 'none';
                toggleBtn.textContent = 'Показать получателей';
            }
        }
    </script>
</body>
</html>